{% extends "::math-template.html.twig" %}

{% block title %}ModelBundle:Question:show{% endblock %}

{% block body %}
    {#
    <div class="well">
        <div class="row">
            <div class="col-md-2"><i class="fa fa-anchor" aria-hidden="true"></i>&nbsp;font-awesome</div>
            <div class="col-md-2">bootstrap</div>
            <div class="col-md-2">jquery:  <span class="status">not working</span></div>
            <div class="col-md-2">jquery ui</div>
            <div class="col-md-2"><button class="button btn-primary">button</button>&nbsp;bootstrap-theme</div>
        </div>
    </div>
    #}

    <div class="challenge text">{{ entity.question }}</div>

    <div class="math"></div>

    <div class="pull-left">
        <div class='row'>
            <div class="phrase  col-lg-12 col-md-12  col-sm-12"></div>
        </div
    </div>

    <div>
        {% if prevEntity != null %}
            <a href="{{ path('model_question_show', {id:prevEntity.id}) }}">{{ prevEntity.question }}</a>
        {% endif %}
        {% if nextEntity != null %}
            <a href="{{ path('model_question_show', {id:nextEntity.id}) }}">{{ nextEntity.question }}</a>
        {% endif %}
    </div>

    <style>
        .text {
            font-size:24px;
        }
        .phrase {
            margin:10px;
            margin-top:30px;
        }
        .block {
            width:40px;
            height:40px;
            display:inline-block;
            margin:3px;
            text-align: center;
        }
        .letter-block {
            border:1px #fff solid;
            height:20px;
        }
        .letter {
            border-bottom:1px black solid;
        }
        .space-block {
            border:1px #fff solid;
            border-top:1px white solid;
        }
        .math-block {

        }
        .secret {
            display:none;
        }
        .underline {
            display: inline-block;
            border-bottom:1px black solid;
            width:40px;
        }

    </style>


{% endblock %}

{% block javascripts %}
    <script>
        $(document).ready(function(){
            $(".status").text("working")
        })
    </script>

    <script>
        $(document).ready(function(){
            function showMath() {
                var randomNum1 = Math.floor((Math.random() * 100) + 1);
                var randomNum2 = Math.floor((Math.random() * 100) + 1);
                var answer = randomNum1 + randomNum2;
                var mathblock = $("<div></div>").append(randomNum1 + " + " + randomNum2 + " = " + answer);
                $(".math").append(mathblock);
            }

            function showPhraseAnswers(phrase) {
                for (var i = 0; i < phrase.length; i++) {
                    var char                = phrase.charAt(i);
                    var letterblock         = $("<div class='block letter-block text'><div class='letter'></div><div class='number'></div></div>");
                    var spaceblock          = $("<div class='block space-block'></div>");
                    var num                 = getNumberByChar(char, phraseArray);
                    var secretAnswerBlock   = $("<div class='secret'></div>").text(char);

                    letterblock.find(".number").append(num);
                    letterblock.find(".letter").append(secretAnswerBlock);

                    $(".phrase").append((char == " ") ? spaceblock.text(char) : letterblock);
                }
            }

            function makePhraseArray(phrase) {
                arr = [];
                for (var i = 0; i < phrase.length; i++) {
                    var char    = phrase.charAt(i);

                    if (char!= " ") {

                        var qAndA = getQuestionAndAnswer(char);
                        while (answerExists(qAndA[1], arr)) {
                            qAndA = getQuestionAndAnswer(char);
                        }

                        if (!charIsInArray(char, arr)) {
                            arr.push(
                                    {
                                        'displayChar'   :char,
                                        'char'          :char.toLowerCase(),
                                        'question'      :qAndA[0],
                                        'answer'        :qAndA[1]
                                    }
                            )
                        }
                    }
                }
                return arr;
            }

            function charIsInArray(char, arr) {
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i].char == char.toLocaleLowerCase()) {
                        return true;
                    }
                }
                return false;
            }

            function getNumberByChar(char, arr) {
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i].char == char.toLocaleLowerCase()) {
                        return arr[i].answer;
                    }
                }
                return "";
            }

            function answerExists(a, arr) {
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i].answer == a) {
                        return true;
                    }
                }
                return false;
            }

            function getQuestionAndAnswer(char) {
                var arr = [];
                var operator    = ['+', '-', 'x', '%'][Math.floor((Math.random() * 4))];

                switch(operator) {
                    case '+':
                        var randomNum1  = Math.floor((Math.random() * 100) + 1);
                        var randomNum2  = Math.floor((Math.random() * 100) + 1);
                        var answer      = randomNum1 + randomNum2;
                        break;
                    case '-':
                        // largest number first (always positive answer)
                        var randomNum1  = Math.floor((Math.random() * 100) + 1);
                        var randomNum2  = Math.floor((Math.random() * 100) + 1);
                        if (randomNum1 < randomNum2) {
                            var temp = randomNum2;
                            randomNum2 = randomNum1;
                            randomNum1 = temp;
                        }
                        var answer      = randomNum1 - randomNum2;
                        break;
                    case 'x':
                        var randomNum1  = Math.floor((Math.random() * 10) + 1);
                        var randomNum2  = Math.floor((Math.random() * 10) + 1);
                        var answer      = randomNum1 * randomNum2;
                        break;
                    case '%':
                        // largest number first
                        var randomNum1  = Math.floor((Math.random() * 10) + 1);
                        var answer      = Math.floor((Math.random() * 10) + 1);
                        var randomNum2  = randomNum1 * answer;
                        if (randomNum1 < randomNum2) {
                            var temp = randomNum2;
                            randomNum2 = randomNum1;
                            randomNum1 = temp;
                        }
                        break;
                }

                arr[0]          = $("<span>" + randomNum1 + " "+operator+" " + randomNum2 + "</span>");
                arr[1]          = answer;
                arr[2]          = operator;
                return arr;
            }

            function showAllQuestions(phraseArray) {
                shuffle(phraseArray);
                for (var i = 0; i < phraseArray.length; i++) {
                    obj = phraseArray[i];
                    showOneQuestion(obj);
                    $(".math").append(q);
                }
            }

            function showOneQuestion(obj) {
                var space               = $("<span class='underline'></span>");
                var secretAnswerBlock   = $("<span class='secret'></span>").text(obj.answer);
                space.append(secretAnswerBlock)

                q = $("<div class='col-lg-3 col-md-4 col-sm-6 text'></div>");
                q.append(obj.char.toUpperCase() + ": ");
                q.append(obj.question);
                q.append(" = ");
                q.append(space);
                q.append("<br/>");

                $(".math").append(q)
            }

            function shuffle(array) {
                var currentIndex = array.length, temporaryValue, randomIndex;
                while (0 !== currentIndex) {

                    randomIndex = Math.floor(Math.random() * currentIndex);
                    currentIndex -= 1;

                    temporaryValue = array[currentIndex];
                    array[currentIndex] = array[randomIndex];
                    array[randomIndex] = temporaryValue;
                }

                return array;
            }

            //var phrase = "Please excuse my dear aunt Sally. Couldn't";
            var phrase = "{{ entity.answer | raw }}";
            var phraseArray = makePhraseArray(phrase);

            showAllQuestions(phraseArray);
            showPhraseAnswers(phrase, phraseArray);

            $(".math").click(function(){
                $(".secret").show();
            })
        })
    </script>
{% endblock %}
